val mtaData = sc.textFile("mtaRidership/MTA_Ridership.csv")
val Head = mtaData.first()
val noHeader = mtaData.filter(line => !line.equals(Head))
val numberOfRecords = noHeader.count()
println(s"Number Of Records: $numberOfRecords")
val column3 = noHeader.map(line => line.split(",")(2))
val column3results = column3.countByValue()
println("Counting number of each record in Column 3")
column3results.foreach(println)
val column5 = noHeader.map(line => line.split(",")(4))
val column5results = column5.countByValue()
println("Counting number of each record in Column 5")
column5results.foreach(println)
val columns = noHeader.map(line => line.split(","))
val keyValue = columns.flatMap(arr => arr.zipWithIndex.map { case (value, index) => (index, value) })
val distinctValues = keyValue.distinct()
val distinctCount = distinctValues.countByKey()
val result = distinctCount.toSeq.sortBy(_._1).map { case (columnIndex, count) => (s"Column_${columnIndex + 1}", count) }
println("Counting number of distinct values in each column")
result.foreach { case (columnName, count) => println(s"$columnName: $count") }